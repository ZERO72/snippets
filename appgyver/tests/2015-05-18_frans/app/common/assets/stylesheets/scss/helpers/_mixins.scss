@mixin font-face($fontFamily, $eotFileSrc, $woffFileSrc, $ttfFileSrc, $svgFileSrc) {
	font-family: $fontFamily;
	src: url($eotFileSrc) format('eot'),
	url($woffFileSrc) format('woff'),
	url($ttfFileSrc) format('truetype'),
	url($svgFileSrc) format('svg');
}

@mixin background-opacity($color, $opacity: 0.85) {
	background: $color;
	background: rgba($color, $opacity);
}

@mixin linear-gradient($fromColor, $toColor) {
	background-color: $toColor; /* Fallback Color */
	background-image: -webkit-gradient(linear, left top, left bottom, from($fromColor), to($toColor)); /* Saf4+, Chrome */
	background-image: -webkit-linear-gradient(top, $fromColor, $toColor); /* Chrome 10+, Saf5.1+, iOS 5+ */
	background-image:    -moz-linear-gradient(top, $fromColor, $toColor); /* FF3.6 */
	background-image:     -ms-linear-gradient(top, $fromColor, $toColor); /* IE10 */
	background-image:      -o-linear-gradient(top, $fromColor, $toColor); /* Opera 11.10+ */
	background-image:         linear-gradient(top, $fromColor, $toColor);
	filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0,StartColorStr='#{$fromColor}', EndColorStr='#{$toColor}');
}

@mixin border-radius($radius: 5px) {
	-moz-border-radius: $radius;
	-webkit-border-radius: $radius;
	border-radius: $radius;
}

@mixin box-shadow($x, $y, $blur, $color, $inset: "") {
	@if ($inset != "") {
		-webkit-box-shadow: $inset $x $y $blur $color;
		-moz-box-shadow: $inset $x $y $blur $color;
		box-shadow: $inset $x $y $blur $color;
	} @else {
		-webkit-box-shadow: $x $y $blur $color;
		-moz-box-shadow: $x $y $blur $color;
		box-shadow: $x $y $blur $color;
	}
}

@mixin border-gradient($fromColor, $toColor){
-webkit-border-image: 
      -webkit-gradient(linear, 0 100%, 0 0, from($fromColor), to($toColor)) 1 100%;
    -webkit-border-image: 
      -webkit-linear-gradient(bottom, $fromColor, $toColor) 1 100%;
    -moz-border-image:
      -moz-linear-gradient(bottom, $fromColor, $toColor) 1 100%;  
    -o-border-image:
      -o-linear-gradient(bottom, $fromColor, $toColor) 1 100%;
    border-image:
      linear-gradient(to top, $fromColor, $toColor) 1 100%;
}

@mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0,0,0,.4)) {
	text-shadow: $x $y $blur $color;
}

@mixin box-sizing($type: border-box) {
	-webkit-box-sizing: $type;
	-moz-box-sizing: $type;
	box-sizing: $type;
}

@mixin opacity($opacity: 0.5) {
	filter: alpha(opacity=($opacity * 100));
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=" + ($opacity * 100) + ")";
	-moz-opacity: $opacity;
	-khtml-opacity: $opacity;
	opacity: $opacity;
}

@mixin transform($params) {
	-webkit-transform: $params;
	-moz-transform: $params;
	transform: $params;
}

@mixin transform-origin ($origin) {
	moz-transform-origin: $origin;
	 -o-transform-origin: $origin;
	-ms-transform-origin: $origin;
-webkit-transform-origin: $origin;
		transform-origin: $origin;
}

@mixin backface-visibility ($arguments) {
	-webkit-backface-visibility: $arguments;
	-moz-backface-visibility: $arguments;
	-ms-backface-visibility: $arguments;
	-o-backface-visibility: $arguments;
	backface-visibility: $arguments;
} 

@mixin transition($what: all, $length: 1s, $easing: ease-in-out) {
	-moz-transition: $what $length $easing;
	-o-transition: $what $length $easing;
	-webkit-transition: $what $length $easing;
	-ms-transition: $what $length $easing;
	transition: $what $length $easing;
}

@mixin transitionDelay($delay) {
	-webkit-transition-delay: $delay;
	-moz-transition-delay: $delay;
	-o-transition-delay: $delay;
	-ms-transition-delay: $delay;
	transition-delay: $delay;
}

@mixin keyframes($animation-name) {
	@-webkit-keyframes #{$animation-name} {
	@content;
	}
	@-moz-keyframes #{$animation-name} {
	@content;
	}
	@-ms-keyframes #{$animation-name} {
	@content;
	}
	@-o-keyframes #{$animation-name} {
	@content;
	}
	@keyframes #{$animation-name} {
	@content;
	}
}

@mixin animation($str) {
	-webkit-animation: #{$str};
	-moz-animation: #{$str};
	-ms-animation: #{$str};
	-o-animation: #{$str};
	animation: #{$str};
}

@mixin animation-iteration-count($str) {
	-webkit-animation-iteration-count: $str;
	-moz-animation-iteration-count: $str;
	-ms-animation-iteration-count: $str;
	-o-animation-iteration-count: $str;
	animation-iteration-count: $str;
}